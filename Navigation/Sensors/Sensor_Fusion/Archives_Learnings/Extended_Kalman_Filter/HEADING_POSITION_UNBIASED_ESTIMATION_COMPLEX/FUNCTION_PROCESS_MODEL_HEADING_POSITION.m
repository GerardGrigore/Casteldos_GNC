function STATE_VECTOR_TAYLOR_EXPANSION_CURRENT = FUNCTION_PROCESS_MODEL_HEADING_POSITION(EAST_PREVIOUS,NORTH_PREVIOUS,PHI_HEADING_PREVIOUS,...
                                                                                         VELOCITY_PREVIOUS,ANGULAR_RATE_PHI_POINT_PREVIOUS,...
                                                                                         ACCELERATION_LONGITUDINAL_PREVIOUS,TIME_STEP_HW)

% This function reprezents the first term of the Taylor's Series Expansion
% of the state equation linearized with the noise settled to 0.

EAST_CURRENT = EAST_PREVIOUS + cos(PHI_HEADING_PREVIOUS)*(VELOCITY_PREVIOUS*TIME_STEP_HW + ACCELERATION_LONGITUDINAL_PREVIOUS*0.5*TIME_STEP_HW^2) -...
               sin(PHI_HEADING_PREVIOUS)*(VELOCITY_PREVIOUS*ANGULAR_RATE_PHI_POINT_PREVIOUS*0.5*TIME_STEP_HW^2 + (1/3)*ANGULAR_RATE_PHI_POINT_PREVIOUS*...
               ACCELERATION_LONGITUDINAL_PREVIOUS*TIME_STEP_HW^3);

NORTH_CURRENT = NORTH_PREVIOUS + sin(PHI_HEADING_PREVIOUS)*(VELOCITY_PREVIOUS*TIME_STEP_HW + ACCELERATION_LONGITUDINAL_PREVIOUS*0.5*TIME_STEP_HW^2) +...
               cos(PHI_HEADING_PREVIOUS)*(VELOCITY_PREVIOUS*ANGULAR_RATE_PHI_POINT_PREVIOUS*0.5*TIME_STEP_HW^2 + (1/3)*ANGULAR_RATE_PHI_POINT_PREVIOUS*...
               ACCELERATION_LONGITUDINAL_PREVIOUS*TIME_STEP_HW^3);

PHI_HEADING_CURRENT = PHI_HEADING_PREVIOUS + sign(VELOCITY_PREVIOUS)*(ANGULAR_RATE_PHI_POINT_PREVIOUS*TIME_STEP_HW);

VELOCITY_CURRENT = VELOCITY_PREVIOUS + ACCELERATION_LONGITUDINAL_PREVIOUS*TIME_STEP_HW;

ANGULAR_RATE_PHI_POINT_CURRENT = ANGULAR_RATE_PHI_POINT_PREVIOUS;

ACCELERATION_LONGITUDINAL_CURRENT = ACCELERATION_LONGITUDINAL_PREVIOUS;

% Then compute the output:

STATE_VECTOR_TAYLOR_EXPANSION_CURRENT = [EAST_CURRENT;NORTH_CURRENT;PHI_HEADING_CURRENT;VELOCITY_CURRENT;...
                                         ANGULAR_RATE_PHI_POINT_CURRENT;ACCELERATION_LONGITUDINAL_CURRENT];

end

