function JACOBIAN_STATES_PROCESS_MODEL_OUTPUT = JACOBIAN_STATES_PROCESS_MODEL_SIMPLIFIED(PHI_HEADING_CURRENT,VELOCITY_CURRENT,...
                                                                                         ANGULAR_RATE_PHI_POINT_CURRENT,ACCELERATION_LONGITUDINAL_CURRENT,...
                                                                                         TIME_STEP_HW)

% This function allows to compute the jacobian of the state linked to the
% process model.

% Compute the terms of the jacobian:
JACOBIAN_13 = -sin(PHI_HEADING_CURRENT)*(VELOCITY_CURRENT*TIME_STEP_HW + 0.5*ACCELERATION_LONGITUDINAL_CURRENT*TIME_STEP_HW^2) - ...
              cos(PHI_HEADING_CURRENT)*(VELOCITY_CURRENT*ANGULAR_RATE_PHI_POINT_CURRENT*0.5*TIME_STEP_HW^2 + ...
              (1/3)*ACCELERATION_LONGITUDINAL_CURRENT*ANGULAR_RATE_PHI_POINT_CURRENT*TIME_STEP_HW^3);

JACOBIAN_14 = cos(PHI_HEADING_CURRENT)*TIME_STEP_HW - sin(PHI_HEADING_CURRENT)*(0.5*ANGULAR_RATE_PHI_POINT_CURRENT*TIME_STEP_HW^2);

JACOBIAN_15 = -sin(PHI_HEADING_CURRENT)*(0.5*VELOCITY_CURRENT*TIME_STEP_HW^2 + (1/3)*ACCELERATION_LONGITUDINAL_CURRENT*TIME_STEP_HW^3);

JACOBIAN_16 = cos(PHI_HEADING_CURRENT)*0.5*TIME_STEP_HW^2 - sin(PHI_HEADING_CURRENT)*(1/3)*ANGULAR_RATE_PHI_POINT_CURRENT*TIME_STEP_HW^3;

JACOBIAN_23 = cos(PHI_HEADING_CURRENT)*(VELOCITY_CURRENT*TIME_STEP_HW + 0.5*ACCELERATION_LONGITUDINAL_CURRENT*TIME_STEP_HW^2) - ...
              sin(PHI_HEADING_CURRENT)*(VELOCITY_CURRENT*ANGULAR_RATE_PHI_POINT_CURRENT*0.5*TIME_STEP_HW^2 + ...
              (1/3)*ACCELERATION_LONGITUDINAL_CURRENT*ANGULAR_RATE_PHI_POINT_CURRENT*TIME_STEP_HW^3);

JACOBIAN_24 = sin(PHI_HEADING_CURRENT)*TIME_STEP_HW + cos(PHI_HEADING_CURRENT)*(0.5*ANGULAR_RATE_PHI_POINT_CURRENT*TIME_STEP_HW^2);

JACOBIAN_25 = cos(PHI_HEADING_CURRENT)*(0.5*VELOCITY_CURRENT*TIME_STEP_HW^2 + (1/3)*ACCELERATION_LONGITUDINAL_CURRENT*TIME_STEP_HW^3);

JACOBIAN_26 = sin(PHI_HEADING_CURRENT)*0.5*TIME_STEP_HW^2 + cos(PHI_HEADING_CURRENT)*(1/3)*ANGULAR_RATE_PHI_POINT_CURRENT*TIME_STEP_HW^3;

% Then compute the Jacobian as an output:
JACOBIAN_STATES_PROCESS_MODEL_OUTPUT = [1 0 JACOBIAN_13 JACOBIAN_14 JACOBIAN_15 JACOBIAN_16;
                                        0 1 JACOBIAN_23 JACOBIAN_24 JACOBIAN_25 JACOBIAN_26;
                                        0 0 1 0 sign(VELOCITY_CURRENT)*TIME_STEP_HW 0;
                                        0 0 0 1 0 TIME_STEP_HW;
                                        0 0 0 0 1 0;
                                        0 0 0 0 0 1]; 

end

